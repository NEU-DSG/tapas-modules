<?php
/**
 * @file
 * tapasrecord.module TAPAS TEI upload and transformation
 * 
 * defines tapas_record conent type, performs
 * TEI upload and validation, calls TFC transform.
 */

/** implements hook_form()
 * 
 * This has to be present even if it's just a pass-through,
 * otherwise the content type won't appear in the 
 * admin/structure/types list (I have no idea what the
 * connection is, or why)
 **/
function tapas_recordnode_form($node, $form_state) {
  //return node_content_form($node, $form_state);
	$form = array();

	$form['tapasrecord_form_title'] = array(
		'#type' => 'textfield',
		'#title' => t('A name for this record'),
	);

	$form['tapasrecord_form_tei_file'] = array(
		'#type' => 'managed_file',
		'#title' => 'TEI File to Upload',
	);

	$form['tapasrecord_form_actions'] = array(
		'#type' => 'actions',
	);

	$form['tapasrecord_form_actions']['submit'] = array(
		'#type' => 'submit',
		'#value' => t('Save'),
	);

	$form['tapasrecord_form_actions']['cancel'] = array(
		'#type' => 'button',
		'#value' => t('Cancel')
	);

	return $form;
}


/**
 * implements hook_node_info()
 *
 * Defines the TAPAS record content type
 *
 * I considered making this an entity rather than a node, since node brings
 * along extra baggage that we don't need. However, Drupal's access-control
 * system is node-based; therefore, it would be far more difficult to enforce
 * access restrictions on a custom entity than on a custom node type.
 **/

function tapasrecord_node_info()
{
  return array(
    'tapas_record' => array(
      'name' => t('TAPAS Record'),
      'base' => 'tapas_recordnode',
      'description' => t('Holds a TEI record along with it\'s associated metadata and TFC'),
      'has_title' => TRUE,
      'title_label' => t('Record Title'),
      'help' => '',
    ),
  );
	$content_type = node_type_set_defaults($node_example);
}

/**
 * Implements hook_node_type_insert()
 **/

function tapasrecord_node_type_insert($info)
{
	if ($info->type == 'tapas_recordnode')
	{
		// Create field instances
		field_info_cache_clear();
		field_create_instance(array(
			'field_name' => 'tapas_teifield',
			'entity_type' => 'node',
			'bundle' => 'tapas_recordnode',
			'label' => 'TEI File',
	));
	}

}

