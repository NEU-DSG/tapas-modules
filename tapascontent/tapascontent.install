<?php

/**
 * @file tapascontet/tapascontent.install
 * Installation script for the tapascontnet module.
 *
 * Creates the content types, field bases, and field instances for
 * TAPAS content types. Also removes them when the module is 
 * uninstalled.
 *
 * @author Linda Moss (GitHub LindaJeanne) <l.moss@neu.edu>
 * @since 2.0
 * @version 2.0
 */

include_once('tapascontent_fields.inc');

/**
 * Implements hook_install()
 */

function tapascontent_install() {

	//make custom node types available at install
	node_types_rebuild();

	//create field bases
	$bases = tapas_field_bases();
	foreach ($bases as $field) {
		field_create_field($field);
	}

	field_info_cache_clear();

	//create field instances
	$instances = tapas_fields_project();
	foreach ($instances as $field) {
		field_create_instance($field);
	}
	$instances = tapas_fields_collection();
	foreach ($instances as $field) {
		field_create_instance($field);
	}
	$instances = tapas_fields_record();
	foreach ($instances as $field) {
		field_create_instance($field);
	}

	//Add organic groups field. 
	//Detailed role and permission info will be added via feature, but
	//we add the needed fields via the API here.

	tapas_og_group_fields(TAPAS_PROJECT);
	tapas_og_group_fields(TAPAS_COLLECTION);

	tapas_og_content_fields(TAPAS_RECORD, TAPAS_COLLECTION, TAPAS_R_TO_C);
	tapas_og_content_fields(TAPAS_COLLECTION, TAPAS_PROJECT, TAPAS_C_TO_P);

}

/** 
 * Implements hook_uninstall()
 */

function tapascontent_uninstall() {

	$bases = tapas_field_bases();
	foreach ($bases as $field) {
		field_delete_field($field['field_name']);
	}

	$instances = tapas_fields_project();
	foreach ($instances as $field) {
		field_delete_instance($field);
	}

	$instances = tapas_fields_collection();
	foreach ($instances as $field) {
		field_delete_instance($field);
	}

	$instances = tapas_fields_record();
	foreach ($instances as $field) {
		field_delete_instance($field);
	}

	node_type_delete(TAPAS_RECORD);
	node_type_delete(TAPAS_COLLECTION);
	node_type_delete(TAPAS_PROJECT);
	field_purge_batch(1000);

}
