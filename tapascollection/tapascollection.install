<?php

/**
 * @file tapascollection.install
 *
 * Installation script for the tapascollection module. Creates
 *   the TAPAS_PROJECT and TAPAS_COLLECTION content typesm and
 *   their custom fields, including the Organic Groups fields,
 *   which is why og is a requirement.
 *
 * @see tapascollection_constants.inc for constants used in
 *   this file.
 */

/** Custom field info for TAPAS_PROJECT and TAPAS_COLLECTION */
include_once 'tapascollection_fields.inc';

/**
 * Implements hook_install().
 *
 * Generates content types and custom fields.
 *
 */

function tapascollection_install() {

	// Make custom node type available at install
	node_types_rebuild();

	//fields
	$bases = tapascollection_field_bases();
	foreach($bases as $b) {
		field_create_field($b);
	}
	
	field_info_cache_clear();

	// field instances
	$instances = array_merge(
		tapas_collection_field_instances(),
		tapas_project_field_instances()
	);
	$instances = array_merge(
		$instances,
		tapas_hidden_field_instances()
	);

	foreach($instances as $i) {
		field_create_instance($i);
	}

	// organic groups fields.
	tapascollection_og_fields();

}

/**
 * Implements hook_uninstall().
 *
 * Deletes the field bases and field instances that we created,
 * then deletes the TAPAS_COLLECTION and TAPAS_PROJECT content
 * types.
 */
function tapascollection_uninstall() {

	// first, delete all the fields we created.
	$bases = tapascollection_field_bases();
	foreach($bases as $field) {
		field_delete_field($field['field_name']);
	}

	// then, delete field instances of other fields.
	$instances = field_info_instances('node', TAPAS_COLLECTION);
	foreach ($instances as $instance_name => $data) {
		field_delete_instance($data);
	}

	$instances = field_info_instances('node', TAPAS_PROJECT);
	foreach ($instances as $instance_name => $data) {
		field_delete_instance($data);
	}

	// finally, delete the content types we created.
	node_type_delete(TAPAS_COLLECTION);
	node_type_delete(TAPAS_PROJECT);
	field_purge_batch(1000);
}

function tapascollection_enable() {

}

